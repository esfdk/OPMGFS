TODO:
	Grooss
		Set up visual studio task list priorities
		Set up constructor for map fitness significance settings
		(done) Consider destructible rocks in jump point search
		(done, but not sure how slow yet) Distance to ALL expansions considered
		Figure out how to remove "bad starting maps" by preprocess prior to starting evolution/novelty search		
		(done) Consider both direct (flight) and ground path between points in fitness function
		Better Smoothing
		Upper limit on pathfinding (not done, but probably not needed due to JPS' speed)
		(done) Fix bug in choke point search
		
	Melnyk
		(done? needs discussion) Impement other version of ramp placement
		(done. Needs way to input map settings)Set up novelty search for testing
		(maybe not necessary, )Eliminate unfeasible results from evolution?
		Figure out how to make smoothing faster or simply cut it out completely ?0
		Figure out what makes advancing generation slow
		Implement FI2NS
	
	Uassigned TODOs
		Figure out cost and/or how to consider "openness" of bases / impassable terrain around a base
		Number of choke points seen by Xel'Naga towers
		Time limit on evolution (maybe on novelty search, if it isn't already?)
	
	Low prio TODOs
		Figure out cost and/or how to consider siege tank ranges
		Number of choke points seen by Xel'Naga towers
		Impassable terrain around edge of map (possibly in base map generation)
		Blink/reaper pathing calculation
		
	Finished TODOs
		(done) Cellular Automata after placing map points
		(done) Expand choke point search
		(done) Jump Point Search
		(done) Displacement (done)
		(done) Random add/remove of map elements (done)
		(done) Destructible rocks in seperate array
		(done) Set up evolution for testing
		(ground/flight done) Calculate both ground and flight distances
		
Notes:
	Quality = Novelty of map + mechanical quality
	Test parameters by generating the exact same maps (through fixed seed), but with different evaluation parameters
	Preprocess bad start maps
	Use an upper limit on path length (if path is too long, stop pathfinding)
	Good Maps: Foxtrot Labs, Xel'Naga Caverns, Waystation
	Openness of Bases is largest fault with fitness algorithm
	
	
	
Old Notes:
	1-1 representation
	Radial
		center of radial is center of entire map
		place elements in one half
		mirror/turn map
		pathfinding between bases before/after
		turtle graphics for impassable terrain (scrapped for now)
		initial height map using cellular automata
	
	Co-Evolution, Michael Cook