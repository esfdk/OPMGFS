Report
	Aknowledgements?
	Preface?
	Table of Contents 
	Table of Figures
	Abstract

	Introduction 												(Grooss)
		Procedural Content Generation in General
		StarCraft
		StarCraft and PCG

	Related Work
		Discuss other papers/research/methods
			Discuss speed, level of abstraction, and approach to balance & feasibility for each approach

	Goals 														(Melnyk)
		Balance in maps by mirroring
		Direction representation (1:1)
		Refer to related work to explain differences
		Focus on tradeoff in speed vs quality vs novelty
			Argue for time limit in terms of how long a player wants to wait

	Methodology
		Choice of algorithms (search algoritms [of fitness and novelty]) 	(Melnyk)

		Genotype 												(Melnyk)
			Mutation (only variation operator)
			Radial reprenstation (degree, relative distance to edge, type)

		Phenotype 												(Grooss)
			1:1 grid to tile representation in 3 seperate 2D arrays

		Decoding Genotype to Phenotype 							(Melnyk)

		Cellular Automata 										(Grooss)
			General overview
			Initial generation
			Smoothing
			Placement of cliffs

		Evolution 												(Grooss)
			General Overview
			Fitness Measures (evaluation functions)

		Multi-Objective Evolution  								(???)
			General Overview
				Pareto Fronts and Domination

		Novelty Search 											(Melnyk)
			General Overview
			Distance to Feasibility Measure
			Novelty Measure

		Seeding evolution with results of novelty search 		(Melnyk)

	Results
		Test many different parameters to find optimal ones (will take a lot of time, write other parts first)

		Speed (how fast are base maps generated, how quickly are search/evolutionary iterations performed, etc.)

		Quality (how good are maps at what number of iterations)
			Evaluate:
				Quality of base maps (and their viability as actual StarCraft maps)
					Do objective measure (how many "bad/impossible tiles" on map) for a few maps

				Quality of evolution
					Compare few/few, many/few, few/many, many/many combinations of generations/population size
					When does fitness spot improving?

				Quality of novelty search
					How many generations before maps cease to be novel?
					After X generations, how many maps are of acceptable quality (fitness)

				Quality of seeding evolution with novel map combinations
					Compare novelty within foudn solutions with novelty of solutions found by normal evolution

		(Maybe) Consider novelty of maps generated by CA?

		Perform subjective measure of "high fitness" maps to check how correct fitness is
			Consider scoring system? 1-10? Guess fitness value?
			Consider relevant factors that fitness does not take into account (siege tank ranges, reapers, stalkers, etc.) and evaluate their impact

	Discussion
		Speed (is it fast enough?)
		Quality (are the maps good enoguh?)
		Novelty (are generated maps novel compared to each other? Does the tool create too similar maps?)
		Compare Novelty Search vs Evolution (their pros and cons and the benefits of using them together)

	Future Work
		Improving 1:1 representation (so that maps could be imported into StarCraft)
		Reverse engineering StarCraft map format and/or creating generated maps directly in the editor
		Improving/expanding fitness and feasiblity functions to be more precise and include more elements
		Look into Jump Point Search improvements
		Optimize code to reduce amount of searching done when calculating MapFitness

	Conclusion

	Included in the Hand In?
	
	References